! function(e, t) {
    "use strict";

    function n() {
        function n(e, n) {
            n = this, n.scope = e, n.canvas = e.querySelector("canvas"), n.config = t[e.getAttribute("data-elements")], n.drawing = !1, n.pageScrolling = !1, n.display = "desktop", n.viewport = {}, n.mouse = {
                x: 0,
                y: 0,
                limit: .2,
                speed: 15e-5,
                onmove: !1
            }, n.tilt = {
                min: 40,
                max: -40,
                speed: .002,
                angle: 0,
                direction: 1
            }, n.setting = {
                deltaX: 0,
                deltaY: 0
            }, n.mouseMove = function(e) {
                if (!1 === n.pageScrolling && void 0 !== n.group && void 0 !== n.group.children)
                    for (var t = 0, i = n.group.children.length; t < i; t++) n.setting.deltaX = n.group.children[t].position.x + (n.mouse.x - n.viewport.x) * ((t + 1) * n.mouse.speed), n.setting.deltaX > n.group.children[t].limits.x.min && n.setting.deltaX < n.group.children[t].limits.x.max && (n.group.children[t].position.x = n.setting.deltaX), n.setting.deltaY = n.group.children[t].position.y + (n.mouse.y - n.viewport.y) * ((t + 1) * n.mouse.speed), n.setting.deltaY > n.group.children[t].limits.y.min && n.setting.deltaY < n.group.children[t].limits.y.max && (n.group.children[t].position.y = n.setting.deltaY)
            }, n.tiltMove = function(e) {
                if (!1 === n.pageScrolling) {
                    n.tilt.angle > n.tilt.min ? n.tilt.direction = -1 : n.tilt.angle < n.tilt.max && (n.tilt.direction = 1), n.tilt.angle += n.tilt.direction;
                    for (var t = 0, i = n.group.children.length; t < i; t++) n.group.children[t].position.y += n.tilt.angle * n.tilt.speed * (t + 1)
                }
            }, n.init()
        }
        var i = e.getElementById("paper");
        if (null !== i && "undefined" != typeof paper) {
            n.prototype.point = function(e, t, n) {
                return n = this, void 0 !== t && (e = {
                    x: e,
                    y: t
                }), new n.paper.Point(e.x, e.y)
            }, n.prototype.getCoordinates = function(e, t) {
                return t = this, {
                    x: t.viewport.x + e[t.display].x,
                    y: t.viewport.y + e[t.display].y
                }
            }, n.prototype.translate = function(e, t) {
                return t = this, t.point(t.getCoordinates(e))
            }, n.prototype.update = function(e) {
                e = this, !1 === e.drawing && (clearTimeout(e.drawing), e.paper.view.onFrame = null, e.paper.project.activeLayer.removeChildren(), e.drawing = setTimeout(function() {
                    e.display = t.innerWidth < 992 ? "mobile" : "desktop", e.group = new e.paper.Group, e.viewport = {
                        x: .5 * e.canvas.clientWidth,
                        y: .5 * e.canvas.clientHeight
                    }, e.paper.view.viewSize.width = e.canvas.clientWidth, e.paper.view.viewSize.height = e.canvas.clientHeight, e.paper.view.center = e.point(e.viewport), e.group.position = e.paper.view.center, e.addChildren(), e.drawing = !1
                }, 50))
            }, n.prototype.mouseCoordinates = function(e, t) {
                t = this, clearTimeout(t.mouse.onmove), t.mouse.x = e.clientX, t.mouse.y = e.clientY, !0 !== g && t.mouseMove(), t.mouse.onmove = setTimeout(function() {
                    t.mouse.onmove = !1
                }, 100)
            }, n.prototype.updateLimits = function(e, t) {
                e = this;
                for (var n = 0, i = e.group.children.length; n < i; n++) t = (e.group.children[n].index + 1) / e.mouse.limit, e.group.children[n].limits = {
                    x: {
                        min: e.group.children[n].position.x - t,
                        max: e.group.children[n].position.x + t
                    },
                    y: {
                        min: e.group.children[n].position.y - t,
                        max: e.group.children[n].position.y + t
                    }
                };
                e.paper.view.onFrame = !0 !== g ? e.tiltMove : null
            }, n.prototype.triangle = function(e, t, n) {
                n = this, t = new n.paper.Path.RegularPolygon(n.translate(e), 3, e[n.display].size), t.strokeColor = e.strokeColor, t.strokeWidth = e.strokeWidth, t.rotate(e.rotate), n.group.addChild(t)
            }, n.prototype.circle = function(e, t, n) {
                n = this, t = new n.paper.Path.Circle(n.translate(e), e[n.display].size), t.strokeColor = e.strokeColor, t.strokeWidth = e.strokeWidth, n.group.addChild(t)
            }, n.prototype.wave = function(e, t, n, i) {
                i = this, n = i.getCoordinates(e), n.a = e[i.display].size, n.b = Math.floor(.5 * n.a), n.c = Math.floor(.5 * n.b), t = new i.paper.Path, t.strokeColor = e.strokeColor, t.strokeWidth = e.strokeWidth, t.add(i.point(n.x - n.a, n.y)), t.add(i.point(n.x - n.a, n.y)), t.add(i.point(n.x - n.b, n.y + n.c)), t.add(i.point(n.x, n.y)), t.add(i.point(n.x + n.b, n.y + n.c)), t.add(i.point(n.x + n.a, n.y)), t.smooth({
                    type: "catmull-rom",
                    factor: .5
                }), t.rotate(e.rotate), i.group.addChild(t)
            }, n.prototype.addChildren = function(e) {
                e = this;
                for (var t = 0, n = e.config.length; t < n; t++) e[e.config[t].type](e.config[t]);
                e.updateLimits()
            }, n.prototype.init = function(n) {
                n = this, n.paper = new paper.PaperScope, n.paper.setup(n.canvas), n.update(), n.sensor = new ResizeSensor(n.scope, function() {
                    n.update()
                }), t.addEventListener("scroll", function(e) {
                    clearTimeout(n.pageScrolling), n.pageScrolling = setTimeout(function() {
                        n.pageScrolling = !1
                    }, 25)
                }, !1), e.addEventListener("mousemove", function(e) {
                    n.mouseCoordinates(e)
                }, !1)
            };
            new n(i)
        }
    }

    function i() {
        function n(e) {
            e.selector.style.height = Math.ceil(e.innerElements[e.currentSlide].clientHeight) + "px"
        }

        function i(e) {
            clearTimeout(e.autoPlayTimeout), e.autoPlayTimeout = setTimeout(function() {
                !0 === e.config.loop ? e.next() : e.currentSlide >= e.innerElements.length - 1 ? (e.goTo(e.config.startIndex), o(e)) : e.next()
            }, e.config.autoplay || 3e3)
        }

        function o(e, t, o) {
            e = e || this, t = e.selector.parentElement, o = e.innerElements[e.currentSlide].querySelector("cite"), e.lastSlide > e.currentSlide ? classie.add(t, "carousel--reverse") : classie.remove(t, "carousel--reverse"), e.lastSlide = e.currentSlide;
            for (var l = 0, s = e.innerElements.length; l < s; l++) classie.remove(e.innerElements[l], "carousel__item--active"), 0 < e.dotElements.length && classie.remove(e.dotElements[l], "active"), null !== o && classie.remove(e.innerElements[l].querySelector("cite"), "in-view__child--in");
            classie.add(e.innerElements[e.currentSlide], "carousel__item--active"), 0 < e.dotElements.length && classie.add(e.dotElements[e.currentSlide], "active"), setTimeout(function() {
                null !== o && classie.add(o, "in-view__child--in")
            }, e.config.duration), classie.remove(t, "carousel--on-first"), classie.remove(t, "carousel--on-last"), !1 === e.config.loop && 0 === e.currentSlide && classie.add(t, "carousel--on-first"), !1 === e.config.loop && e.innerElements.length - 1 === e.currentSlide && classie.add(t, "carousel--on-last"), n(e), i(e)
        }

        function l(i, l, s, r, a) {
            if (i = this, l = i.selector.parentElement, i.lastSlide = i.currentSlide, i.dotElements = [], i.dots = l.querySelector(".carousel__dots"), r = l.querySelector(".carousel__prev"), s = l.querySelector(".carousel__next"), null !== r && r.addEventListener("click", function() {
                    i.prev()
                }), null !== s && s.addEventListener("click", function() {
                    i.next()
                }), null !== i.dots && !1 === i.config.loop)
                for (var c = 0, d = i.innerElements.length; c < d; c++) {
                    var u = e.createElement("span");
                    u.slideTarget = c, c === i.currentSlide && classie.add(u, "active"), u.style.transition = "all 0.6s 0." + (c + 2) + "s cubic-bezier(0.68, -1, 0.27, 2)", i.dotElements.push(u), i.dots.appendChild(u), u.addEventListener("click", function() {
                        i.goTo(this.slideTarget), o(i)
                    })
                }
            t.addEventListener("resize", function() {
                classie.add(l, "carousel--resizing"), clearTimeout(a), a = setTimeout(function() {
                    n(i), classie.remove(l, "carousel--resizing")
                }, 200)
            }, !1);
            for (var c = 0, d = i.innerElements.length; c < d; c++) i.innerElements[c].resizeSensor = new ResizeSensor(i.innerElements[c], function() {
                n(i)
            });
            o(i), classie.add(l, "carousel--init")
        }
        var s = e.querySelectorAll(".carousel");
        if (null !== s && 0 !== s.length && "undefined" != typeof Siema)
            for (var r = 0, a = s.length; r < a; r++) s[r].siema = new Siema({
                selector: s[r].querySelector(".carousel__frame"),
                duration: 500,
                easing: "ease",
                perPage: 1,
                draggable: !0,
                threshold: 100,
                autoplay: 3e3,
                onInit: l,
                onChange: o
            })
    }

    function o() {
        var n = e.querySelectorAll('a[href^="#"]:not([href="#"])');
        if (null !== n && 0 !== n.length && "undefined" != typeof animateScrollTo)
            for (var i = 0, o = n.length; i < o; i++) n[i].addEventListener("click", function(n, i) {
                null !== (n = e.querySelector(this.hash)) && 0 !== n.length && (i = n.getBoundingClientRect(), animateScrollTo(i.top + t.pageYOffset || 0, {
                    cancelOnUserAction: !1
                }))
            }, !1)
    }

    function l() {
        function t() {
            !1 === i.opened && (classie.add(e.documentElement, i.classes.active), setTimeout(function() {
                classie.add(e.documentElement, i.classes.display), i.opened = !0
            }, 50))
        }

        function n() {
            !0 === i.opened && (classie.remove(e.documentElement, i.classes.display), setTimeout(function() {
                classie.remove(e.documentElement, i.classes.active), i.opened = !1
            }, 300))
        }
        var i = {
            opened: !1,
            trigger: e.querySelectorAll(".side-menu-trigger"),
            swipeable: e.querySelectorAll(".side-menu-swipeable"),
            sidemenu: e.querySelector(".site-sidenav__elements"),
            overlay: e.querySelector(".site-sidenav__overlay"),
            sidemenuitems: e.querySelectorAll(".site-sidenav__elements a"),
            classes: {
                active: "side-menu",
                display: "side-menu--display",
                avoid: "side-menu-trigger"
            }
        };
        if (null !== i.sidemenu && 0 !== i.sidemenu.length) {
            if (0 < i.swipeable.length && function() {
                    if ("undefined" != typeof Hammer)
                        for (var t = 0, o = i.swipeable.length; t < o; t++) {
                            var l = 0,
                                s = i.sidemenu.clientWidth,
                                r = new Hammer(i.swipeable[t]);
                            r.on("panstart", function(t) {
                                classie.add(e.documentElement, "side-menu--panning")
                            }), r.on("swipeleft", n), r.on("panright panleft", function(e) {
                                l += 4 === e.direction ? Math.round(Math.max(3, e.velocity)) : Math.round(Math.min(-3, e.velocity)), l > 0 && (l = 0), Math.abs(l) > s && (l = -1 * s), i.overlay.style.opacity = 1 + 1 * l / s, i.sidemenu.style.webkitTransform = "translateX(" + l + "px)", i.sidemenu.style.transform = "translateX(" + l + "px)"
                            }), r.on("panend pancancel", function(t) {
                                classie.remove(e.documentElement, "side-menu--panning"), Math.abs(l) > .5 * s && n(), i.overlay.style.opacity = "", i.sidemenu.style.webkitTransform = "", i.sidemenu.style.transform = "", l = 0
                            })
                        }
                }(), e.addEventListener("click", function(e) {
                    !0 === i.opened && e.pageX > i.sidemenu.clientWidth && !1 === classie.has(e.target, i.classes.avoid) && n()
                }, !1), null !== i.sidemenuitems && 0 < i.sidemenuitems.length)
                for (var o = 0, l = i.sidemenuitems.length; o < l; o++) i.sidemenuitems[o].addEventListener("click", n, !1);
            if (null !== i.trigger && 0 < i.trigger.length)
                for (var o = 0, l = i.trigger.length; o < l; o++) i.trigger[o].addEventListener("click", t, !1)
        }
    }

    function s(t) {
        function n(e, t, n) {
            setTimeout(function() {
                classie.add(e, t)
            }, n)
        }
        if (null !== typeof(t = e.getElementsByClassName("in-view")) && 0 !== t.length && "undefined" != typeof Waypoint)
            for (var i = {
                    offset: "80%",
                    delay: 200,
                    classes: {
                        child: "in-view__child",
                        scope_in: "in-view--in",
                        child_in: "in-view__child--in"
                    }
                }, o = 0, l = t.length; o < l; o++) {
                new Waypoint({
                    element: t[o],
                    handler: function(e) {
                        var t = this.element.getElementsByClassName(i.classes.child);
                        if (0 < t.length)
                            for (var o = 0, l = t.length; o < l; o++) n(t[o], i.classes.child_in, i.delay * (o + 1));
                        n(this.element, i.classes.scope_in, 0), this.destroy()
                    },
                    offset: t[o].getAttribute("data-offset") || i.offset
                })
            }
    }

    function r(t, n) {
        null !== typeof(t = e.getElementById("masthead")) && 0 !== t.length && "undefined" != typeof Headroom && (n = new Headroom(t, {
            offset: t.clientHeight || 120
        }), n.init())
    }

    function a(n, i) {
        null !== typeof(n = e.getElementById("up")) && 0 !== n.length && "undefined" != typeof Headroom && (i = new Headroom(n, {
            offset: t.innerHeight
        }), i.init())
    }

    function c(t) {
        function n(e, t, n, i) {
            if (!0 !== classie.has(e, "tabs__nav--active") && null !== (i = t.querySelector('.tabs__item[data-tab="' + e.getAttribute("data-tab") + '"]')) && 0 !== i.length) {
                for (var o = 0, l = n.length; o < l; o++) classie.remove(n[o], "tabs__nav--active"), classie.remove(n[o], "tabs__item--active"), n[o].setAttribute("tabindex", "-1"), n[o].setAttribute("aria-selected", "false");
                classie.add(e, "tabs__nav--active"), e.setAttribute("tabindex", "0"), e.setAttribute("aria-selected", "true"), classie.add(i, "tabs__item--active"), i.setAttribute("tabindex", "0"), i.setAttribute("aria-selected", "true")
            }
        }
        if (null !== typeof(t = e.querySelectorAll(".tabs")) && 0 !== t.length)
            for (var i = 0, o = t.length; i < o; i++) ! function(e, t, i) {
                t = e.querySelectorAll(".tabs__nav"), i = e.querySelectorAll("[data-tab]");
                for (var o = 0, l = t.length; o < l; o++) t[o].addEventListener("click", function() {
                    n(this, e, i)
                }, !1)
            }(t[i])
    }

    function d(n) {
        "undefined" != typeof Instafeed && null !== (n = e.getElementById("instafeed")) && function(e, n, i, o) {
            null !== (i = e.getAttribute("data-config")) && void 0 !== t[i] && void 0 !== t[i].userId && void 0 !== t[i].accessToken && (n = new Instafeed({
                get: "user",
                userId: t[i].userId,
                accessToken: t[i].accessToken,
                limit: t[i].limit || 6,
                resolution: t[i].resolution || "standard_resolution",
                template: '<figure class="instagram-feed__item lazyload--el lazyload" data-bg="{{image}}"></figure>',
                error: function(e) {
                    console.warn("Instagram feed warning:", e)
                },
                success: function(e) {}
            }), n.run())
        }(n)
    }

    function u(t) {
        if (null !== typeof(t = e.querySelectorAll(".masonry")) && 0 !== t.length && "undefined" != typeof Masonry)
            for (var n = 0, i = t.length; n < i; n++) {
                var o = new Masonry(t[n], {
                    itemSelector: ".masonry-item",
                    columnWidth: ".masonry-item",
                    horizontalOrder: !0,
                    percentPosition: !0
                });
                o.once("layoutComplete", function(e, t, n, i) {
                        function o(e, t, n) {
                            setTimeout(function() {
                                classie.add(e, t)
                            }, n)
                        }
                        t = 0, n = e[0].layout.cols, i = {
                            offset: "80%",
                            delay: 200,
                            classes: {
                                scope_in: "indexed-list__in-view--in"
                            }
                        };
                        for (var l = 0, s = e.length; l < s; l++) {
                            e[l].element.inViewDelay = t * i.delay, t++, t === n && (t = 0);
                            new Waypoint({
                                element: e[l].element,
                                handler: function(e) {
                                    o(this.element.querySelector(".indexed-list__in-view"), i.classes.scope_in, this.element.inViewDelay), this.destroy()
                                },
                                offset: i.offset
                            })
                        }
                    }),
                    function(e) {
                        setTimeout(function() {
                            e.layout()
                        }, 0)
                    }(o)
            }
    }

    function p(t) {
        null !== typeof(t = e.querySelectorAll(".video-popup")) && 0 !== t.length && "undefined" != typeof MediaBox && MediaBox(".video-popup")
    }

    function m(t, n) {
        if (null !== typeof(t = e.querySelectorAll("[data-sources]")) && 0 !== t.length)
            for (var i = 0, o = t.length; i < o; i++) try {
                n = t[i].getAttribute("data-sources").split("|");
                for (var l = 0, s = n.length; l < s; l++) {
                    var r = e.createElement("source");
                    t[i].appendChild(r), r.src = n[i]
                }
                t[i].removeAttribute("data-sources"), t[i].load()
            } catch (e) {
                console.warn(e)
            }
    }

    function f() {
        classie.add(e.documentElement, "loaded")
    }
    var g = !("undefined" === IS_TOUCH_DEVICE || !IS_TOUCH_DEVICE);
    t.addEventListener("load", f),
        function() {
            !0 === g && classie.add(e.documentElement, "is-touch"), setTimeout(n, 0), setTimeout(i, 0), setTimeout(o, 0), setTimeout(l, 0), setTimeout(s, 0), setTimeout(r, 0), setTimeout(a, 0), setTimeout(c, 0), setTimeout(d, 0), setTimeout(u, 0), setTimeout(p, 0), setTimeout(m, 0)
        }()
}(document, window);